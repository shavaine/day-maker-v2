// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Template      Template[]
  Schedule      Schedule[]
  Action        Action[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Action {
  id     String @id @default(cuid())
  title  String
  user   User   @relation(fields: [userId], references: [id])
  userId String
  Task   Task[]
}

model Task {
  id         String   @id @default(cuid())
  notes      String?
  startTime  Int
  endTime    Int
  action     Action   @relation(fields: [actionId], references: [id])
  actionId   String
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId String
}

model Template {
  id          String     @id @default(cuid())
  name        String
  description String
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  Task        Task[]
  Schedule    Schedule[]
}

model Schedule {
  id         String   @id @default(cuid())
  date       DateTime
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId String
}
